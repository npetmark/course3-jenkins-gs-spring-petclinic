pipeline {
    agent { label 'General' }
        stages {
                stage("Approve") {
                    steps {
                        slackSend message: "Build Started - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Link>)"
                        slackSend message: "Please approve the deployment of ${env.JOB_NAME} ${env.BUILD_NUMBER} (${env.JOB_URL}|Link)"
                        input message: "Approve deployment?", ok: "Yes"
                     }
                }
                stage("Deploy") {
                    parallel {
                        stage('Docker'){
                            agent { 
                                docker { 
                                    image 'nmark/petclinic'
                                    args '--name petclinic-deploy'
                                }
                            }
                            steps {
                                copyArtifacts filter: '**/*.jar', fingerprintArtifacts: true, projectName: 'petclinic-ci', target: './deploy-petclinic'
                                sh 'docker exec -u 0 petclinic docker cp petclinic-deploy:./var/jenkins_home/workspace/petclinic-cd/deploy-petclinic/target/spring-petclinic-3.1.0-SNAPSHOT.jar ./'
                                script { 
                                    try {
                                        sh 'docker exec -u 0 petclinic pkill -f "java -Dserver.port=9000 -jar spring-petclinic-3.1.0-SNAPSHOT.jar"'
                                    } catch (err) {
                                        echo err.getMessage()
                                    } finally {
                                        sh "docker exec petclinic java -Dserver.port=9000 -jar spring-petclinic-3.1.0-SNAPSHOT.jar &"
                                    }
                                }
                            }
                        }
                        stage('Linux') {
                            steps {
                                echo "Deploying on Linux"
                            }
                        }
                        stage('Windows') {
                            steps {
                                echo "Deploying on Windows"
                            }
                        }
                    }
            }
        }
        post {
            always {
                emailext body: "${env.BUILD_URL}\n${currentBuild.absoluteUrl}",
                    to: 'nikolay.markov@technocloudlab.com',
                    recipientProviders: [previous()], 
                    subject: "${currentBuild.currentResult}: Job ${env.JOB_NAME} [${env.BUILD_NUMBER}]"

                slackSend message: "Build Completed - ${currentBuild.currentResult}: ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Link>)"
            }   
        }
}